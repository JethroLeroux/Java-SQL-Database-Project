/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JethroLeroux;

/**
 *
 * @author Jethro
 */
import java.util.*;
import java.io.*;
public class LoginScreen extends javax.swing.JFrame {

  
        private boolean admin =false; //if the user is an admin or not
    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();   //initializes the JFrames components
        javax.swing.ImageIcon pic = new javax.swing.ImageIcon("logo.png");//loads background image
        javax.swing.ImageIcon scaledPic = new javax.swing.ImageIcon(pic.getImage().getScaledInstance(460,320, 0));//resizes the image to the JFrames dimensions
        lblBackground.setIcon(scaledPic);//sets the background labels icon to the resized image
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txfUsername = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        pwfPassword = new javax.swing.JPasswordField();
        btnHelp = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblWelcome.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblWelcome.setText("Welcome, please enter your unique username and password");
        getContentPane().add(lblWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lblUsername.setText("Username:");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        lblPassword.setText("Password:");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, 10));
        getContentPane().add(txfUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 210, 30));

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        pwfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwfPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(pwfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 210, 30));

        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        getContentPane().add(btnHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, -1, -1));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JethroLeroux/Logo.png"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try{
            Scanner sc = new Scanner(new FileReader("LoginDetails.txt"));//load in the text file
            boolean authorised = false;//false=not an admin as default
            char[] inputPassword = pwfPassword.getPassword();//password field is put into an array of chars
            while(sc.hasNext() && authorised ==false)//loop through the text file. Authorised works as a flag to stop the loop
            {
                 String line = sc.nextLine();//load in each line
                 String[] temp = line.split("#");//split up each line into the parts separated by #'s
                 
                 
                 char[] correctPassword = temp[1].toCharArray();//converts the lines password to a char array and stores it in a variable
                 
                 if(temp[0].equals(txfUsername.getText()) && Arrays.equals(inputPassword, correctPassword))//if the username enetered is the same as the loaded in username and the passwords are also the same
                 {
                     if(temp[2].equals("0"))//therefore an employee
                     {
                         authorised = true; //allows user to enter program
                     }else
                         if(temp[2].equals("1"))//therefore an admin
                         {
                             admin =true;   //says the user is an admin
                             authorised = true; //allows user to enter program
                         }else
                             System.out.println("Unknown value in text field for job type");//data checking. Not allowing abstract data
                 }
            }
            
            if(authorised ==true)//then the user can enter the program
            {
                MainScreen ms = new MainScreen(admin);//load the main screen. Parses is the user is an admin or not
                ms.setVisible(true);
                this.setVisible(false);//close the login screen
                PlaySound ps = new PlaySound();
            }else//user has input the wrong details
            {
                IncorrectPassword ip = new IncorrectPassword();//load the incorrect password screen
                ip.setVisible(true);
                pwfPassword.setText(""); //erases the password text field so the correct password may be entered
            }
        }catch(FileNotFoundException e){System.out.println("File Not found:" + e);}//error catch FileNotFound exception for LoginDetails.txt
        
    }//GEN-LAST:event_btnLoginActionPerformed

    private void pwfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwfPasswordActionPerformed

    }//GEN-LAST:event_pwfPasswordActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
      HelpScreen hs = new HelpScreen();//load the help screen
      hs.setVisible(true);
    }//GEN-LAST:event_btnHelpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPasswordField pwfPassword;
    private javax.swing.JTextField txfUsername;
    // End of variables declaration//GEN-END:variables

    /**
     * @return if user is an admin or not
     */
    public boolean isAdmin() {
        return admin;
    }
}
