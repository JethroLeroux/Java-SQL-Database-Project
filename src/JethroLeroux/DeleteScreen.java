/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JethroLeroux;

import javax.swing.JOptionPane;

/**
 *
 * @author Jethro
 */
public class DeleteScreen extends javax.swing.JFrame {

    boolean admin = false; //if the user is an admin or not
    /**
     * Creates new form DeleteScreen
     */
    public DeleteScreen(boolean authorisation) {// variable in method call is needed to call the constructor - this parses true if the user is an admin and false if not
        initComponents();//initialize the JFrames components
        admin = authorisation;  //set admin to the authorisation level of the user
        javax.swing.ImageIcon pic = new javax.swing.ImageIcon("background.jpg");//load in the background image
        javax.swing.ImageIcon scaledPic = new javax.swing.ImageIcon(pic.getImage().getScaledInstance(500, 330, 0));//resize the image
        lblBackground.setIcon(scaledPic);//set the labels icon to the image
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        radbtnPayments = new javax.swing.JRadioButton();
        radbtnRepairs = new javax.swing.JRadioButton();
        radbtnEmployees = new javax.swing.JRadioButton();
        radbtnCustomers = new javax.swing.JRadioButton();
        radbtnCars = new javax.swing.JRadioButton();
        lblKeyField = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txfDeleteField = new javax.swing.JTextField();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Aharoni", 0, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Delete Item");
        getContentPane().add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        radbtnPayments.setText("Payments");
        radbtnPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radbtnPaymentsActionPerformed(evt);
            }
        });
        getContentPane().add(radbtnPayments, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, -1));

        radbtnRepairs.setText("Repairs");
        radbtnRepairs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radbtnRepairsActionPerformed(evt);
            }
        });
        getContentPane().add(radbtnRepairs, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, -1, -1));

        radbtnEmployees.setText("Employees");
        radbtnEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radbtnEmployeesActionPerformed(evt);
            }
        });
        getContentPane().add(radbtnEmployees, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        radbtnCustomers.setText("Customers");
        radbtnCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radbtnCustomersActionPerformed(evt);
            }
        });
        getContentPane().add(radbtnCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        radbtnCars.setText("Cars");
        radbtnCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radbtnCarsActionPerformed(evt);
            }
        });
        getContentPane().add(radbtnCars, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        lblKeyField.setBackground(new java.awt.Color(255, 255, 255));
        lblKeyField.setForeground(new java.awt.Color(255, 255, 255));
        lblKeyField.setText("Primary key ID value  :");
        getContentPane().add(lblKeyField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 80, 30));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 80, 30));
        getContentPane().add(txfDeleteField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 130, 30));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JethroLeroux/background.jpg"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
      this.setVisible(false);   //close the delete screen/JFrame
    }//GEN-LAST:event_btnCancelActionPerformed

    private void radbtnCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radbtnCarsActionPerformed
        radbtnCustomers.setSelected(false);     //code to make the other radio buttons unchecked when this one is checked so only one table can be deleted from at a time
        radbtnEmployees.setSelected(false);
        radbtnPayments.setSelected(false);
        radbtnRepairs.setSelected(false);
   
    }//GEN-LAST:event_radbtnCarsActionPerformed

    private void radbtnEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radbtnEmployeesActionPerformed
        radbtnCustomers.setSelected(false);     //code to make the other radio buttons unchecked when this one is checked so only one table can be deleted from at a time
        radbtnCars.setSelected(false);
        radbtnPayments.setSelected(false);
        radbtnRepairs.setSelected(false);
    }//GEN-LAST:event_radbtnEmployeesActionPerformed

    private void radbtnPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radbtnPaymentsActionPerformed
        radbtnCustomers.setSelected(false);     //code to make the other radio buttons unchecked when this one is checked so only one table can be deleted from at a time
        radbtnCars.setSelected(false);
        radbtnEmployees.setSelected(false);
        radbtnRepairs.setSelected(false);
    }//GEN-LAST:event_radbtnPaymentsActionPerformed

    private void radbtnCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radbtnCustomersActionPerformed
        radbtnPayments.setSelected(false);     //code to make the other radio buttons unchecked when this one is checked so only one table can be deleted from at a time
        radbtnCars.setSelected(false);
        radbtnEmployees.setSelected(false);
        radbtnRepairs.setSelected(false);
    }//GEN-LAST:event_radbtnCustomersActionPerformed

    private void radbtnRepairsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radbtnRepairsActionPerformed
        radbtnPayments.setSelected(false);     //code to make the other radio buttons unchecked when this one is checked so only one table can be deleted from at a time
        radbtnCars.setSelected(false);
        radbtnEmployees.setSelected(false);
        radbtnCustomers.setSelected(false);
    }//GEN-LAST:event_radbtnRepairsActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        boolean performed = false; //boolean variable to say if a delete function has been performed
        
        if(radbtnCars.isSelected()) //when the Cars radio button is checked
        {
            CarObject deletedCar = new CarObject(Integer.parseInt(txfDeleteField.getText()),"","","",0); //create an object to be parsed to the delete function in the manager(DBM) class
            CarDBM c = new CarDBM(); //create an object of manager class
            c.deleteCar(deletedCar);    //calls the delete method in the manager class which has the Delete SQL Query in it
            performed=true; //deletion has been performed
        }else
            if(radbtnCustomers.isSelected())    //when the Customers radio button is checked
                {
                    CustomerObject deletedCust = new CustomerObject(Integer.parseInt(txfDeleteField.getText()),"","",""); //create an object to be parsed to the delete function in the manager(DBM) class
                    CustomerDBM c = new CustomerDBM(); //create an object of manager class
                    c.deleteCustomer(deletedCust);  //calls the delete method in the manager class which has the Delete SQL Query in it
                    performed=true; //deletion has been performed
                }else
                    if(radbtnEmployees.isSelected())    //when the Employees radio button is checked
                    {
                        if(admin) //only an admin can delete from the payments/employees table
                        {
                            EmployeeObject deletedEmp = new EmployeeObject(Integer.parseInt(txfDeleteField.getText()),"","",""); //create an object to be parsed to the delete function in the manager(DBM) class
                            EmployeeDBM c = new EmployeeDBM(); //create an object of manager class
                            c.deleteEmployee(deletedEmp);   //calls the delete method in the manager class which has the Delete SQL Query in it
                            performed=true; //deletion has been performed
                        }else //user is not an admin
                            {
                                AuthorisationError ae = new AuthorisationError(); //explains why access has been denied
                                ae.setVisible(true);
                            }
                    }else
                        if(radbtnRepairs.isSelected())  //when the Repairs radio button is checked
                        {
                            RepairObject deletedRep = new RepairObject(Integer.parseInt(txfDeleteField.getText()),0,0,"","",false); //create an object to be parsed to the delete function in the manager(DBM) class
                            RepairDBM c = new RepairDBM(); //create an object of manager class
                            c.deleteRepair(deletedRep); //calls the delete method in the manager class which has the Delete SQL Query in it
                            performed=true; //deletion has been performed
                        }else
                             if(radbtnPayments.isSelected())    //when the Payments radio button is checked
                                {
                                    if(admin) //only an admin can delete from the payments/employees table
                                    {
                                        PaymentObject deletedPay = new PaymentObject(Integer.parseInt(txfDeleteField.getText()),0,0,false); //create an object to be parsed to the delete function in the manager(DBM) class
                                        PaymentDBM c = new PaymentDBM(); //create an object of manager class
                                        c.deletePayment(deletedPay);    //calls the delete method in the manager class which has the Delete SQL Query in it
                                        performed=true; //deletion has been performed
                                    }else //user is not an admin
                                        {
                                            AuthorisationError ae = new AuthorisationError(); //explains why access has been denied
                                            ae.setVisible(true);
                                        }
                                }else
                                    System.out.println("No table has been selected! Please select a table by checking a radio button."); //data validation to check a table has been chosen
                
        if(performed)//if a deletion has been performed
        {
            ActionPerformed ap = new ActionPerformed(); //loads action performed screen to show user a deletion has occurred
            ap.setVisible(true);
            
            txfDeleteField.setText("");             //clear every text field and radio button to be ready for the user to start the next deletion
            radbtnPayments.setSelected(false);     
            radbtnCars.setSelected(false);
            radbtnEmployees.setSelected(false);
            radbtnRepairs.setSelected(false);
            radbtnCustomers.setSelected(false);
        } //there doesnt have to be an else as the DBM method already tells the user if the deletion failed
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeleteScreen ds = new DeleteScreen(false); //false = user is not an admin by default
                ds.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblKeyField;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton radbtnCars;
    private javax.swing.JRadioButton radbtnCustomers;
    private javax.swing.JRadioButton radbtnEmployees;
    private javax.swing.JRadioButton radbtnPayments;
    private javax.swing.JRadioButton radbtnRepairs;
    private javax.swing.JTextField txfDeleteField;
    // End of variables declaration//GEN-END:variables
}
